#!/usr/bin/env python
# coding: utf-8

# # dev_veces_mora_4 manual

# ## Instalar librerias

# In[1]:


pip install awswrangler


# In[2]:


get_ipython().system('pip install odfpy')


# ## Importar librerias

# In[3]:


import numpy as np
from datetime import datetime
import awswrangler as wr
import pandas as pd
import calendar
import datetime
from datetime import datetime
from datetime import date
import pytz
from datetime import timedelta
from dateutil.relativedelta import relativedelta


# ## Conexion a redshift

# In[4]:


con_redshift_2 = wr.redshift.connect("redshift_cctp_inovation")
conn = wr.redshift.connect("redshift_devsie")


# ## Variables para la creación de las tablas

# ### Obtener fecha del día que seleccionen, de seis meses atras y de doce meses atras a la fecha seleccionada

# In[5]:


anio=2023
mes=8
dia=1
# Input the date you want 
selected_date =datetime(anio, mes, dia)

# Calculate the date 6 months ago from the selected date
six_months_ago = selected_date - relativedelta(months=6)

# Calculate the date 12 months ago from the selected date
twelve_months_ago = selected_date - relativedelta(months=12)

# Convert the datetime object back to a formatted string
dia_selecionado=selected_date.strftime("%Y%m%d")
six_months_ago = six_months_ago.strftime("%Y%m%d")
twelve_months_ago = twelve_months_ago.strftime("%Y%m%d")

# Corvert the datetimes to a formated int 
dia_selecionado = int(dia_selecionado)
six_months_ago = int(six_months_ago)
twelve_months_ago = int(twelve_months_ago)

# Print the result in a formatted way
print("día selecionado:",dia_selecionado )
print("Seis meses atras del día selecionado", six_months_ago)
print("Doce meses atras del día selecionado", twelve_months_ago)


# ## Subir la tabla dev_veces_mora_6meses a S3 en formato parquet

# In[6]:


sql2 = f"""UNLOAD ($$
                            select cuenta,
                                   sum(count_30) as sum_count_30
                            from (select  *,
                                          case when  max_mora>30 then 1
                                          end as count_30
                                  from (select  cuenta,
                                                anno,
                                                mes,
                                                max(morosidad) as max_mora
                                        from (select  cuenta,
                                                      compania,
                                                      substring(fecha_informacion, 1,4) as anno,
                                                      substring(fecha_informacion, 5,2) as mes,
                                                      substring(fecha_informacion, 7,2) as dia,
                                                      morosidad ,
                                                      atraso
                                              from black_box.cartera
                                              where fecha_informacion={six_months_ago}
                                              )
                                        group by cuenta,anno ,mes
                                      )
                                  )
                            group by cuenta
                        $$)
                        TO 's3://desarrollos-bigdata-inovacion-us-east-1/SAS/sas94/dev_veces_mora_6meses_4/{dia_selecionado}/'
                        IAM_ROLE 'arn:aws:iam::903746939682:role/ReadTP'
                        PARALLEL OFF
                        FORMAT PARQUET
               """


# In[7]:


df2 = wr.redshift.read_sql_query(sql2,con_redshift_2)
