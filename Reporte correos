#!/usr/bin/env python
# coding: utf-8

# # Reporte correos

# ## Importar librerias

# In[1]:


pip install awswrangler


# In[2]:


get_ipython().system('pip install odfpy')


# ## Importar librerias

# In[3]:


import numpy as np
from datetime import datetime
import awswrangler as wr
import pandas as pd
import matplotlib
import matplotlib.pyplot as plt
get_ipython().run_line_magic('matplotlib', 'inline')
import seaborn as sns


# In[4]:


pd.set_option("display.max_columns",None)


# ## Conexion a Redshift

# In[5]:


con = wr.redshift.connect("redshift_devsie")


# ## Lectura de la base que se encuentra en redshift

# In[6]:


sql =f"""
         SELECT 1 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_enero_2022
            UNION
            SELECT 2 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_febrero_2022
            UNION
            SELECT 3 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_marzo_2022
            UNION
            SELECT 4 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_abril_2022
            UNION
            SELECT 5 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_mayo_2022
            UNION
            SELECT 6 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_junio_2022
            UNION
            SELECT 7 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_julio_2022
            UNION
            SELECT 8 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_agosto_2022
            UNION
            SELECT 9 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_septiembre_2022
            UNION 
            SELECT 10 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_octubre_2022
            UNION
            SELECT 11 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_noviembre_2022
            UNION
            SELECT 12 AS mes,
                   COUNT(DISTINCT subscriberkey) AS total_cuentas,
                   SUM(correos_enviados) AS correos_enviados,
                   SUM(links_abiertos) AS links_abiertos,
                   SUM(clicks_dados) AS clicks_dados,
                   SUM(CASE WHEN target='ALCANZADO' THEN 1
                            ELSE 0
                       END) AS ojetivo_alcanzado     
            FROM public.clicks_diciembre_2022;
         """


# ## Creamos el dataframe df1 con los datos que acabamos de leer

# In[7]:


df1 = wr.redshift.read_sql_query(sql,con)


# ## Definimos el campo mes como index

# In[8]:


df = df1.set_index(['mes'])


# In[9]:


df


# ## Ordenamos el campo mes de forma ascendente

# In[10]:


df=df.sort_values(['mes'], ascending=[True])


# In[11]:


df


# ## Dibujamos la grafica de barras para cada uno de los campos del dataframe 

# In[12]:


df.plot(kind = 'bar')
plt.xlabel('mes')


# ## le añadimos las columnas porcentaje_links_abiertos, porcentaje_clicks_dados y porcentaje_ojetivo_alcanzado, que caldulan el prorcentaje de correos abiertos, clicks dados y objetivos alcanzados respecto a el total de correos enviados 

# In[13]:


df['porcentaje_links_abiertos']=(df['links_abiertos']*100)/df['correos_enviados']


# In[14]:


df['porcentaje_clicks_dados']=(df['clicks_dados']*100)/df['correos_enviados']


# In[15]:


df['porcentaje_ojetivo_alcanzado']=(df['ojetivo_alcanzado']*100)/df['correos_enviados']


# In[16]:


df


# ## resumen de los correos abiertos

# In[17]:


sql_a_enero =f"""SELECT mes,
                           COUNT(cuenta ) AS total_abiertos,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 abiertos.subscriberkey_abierto,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 1 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220131 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta ,m
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_abierto
                                     FROM client_contact.slf_email_send_opens
                                     WHERE info_day BETWEEN 20220101 AND 20220131) as abiertos
                                ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
                    GROUP BY mes
               
               """


# In[ ]:


df_enero = wr.redshift.read_sql_query(sql_a_enero,con)
df_enero


# In[ ]:


df_enero=df_enero[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_enero=df_enero.transpose( )
df_enero=df_enero.rename(columns={0: 'totales'})
plot =df_enero.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_febrero =f"""SELECT mes,
       COUNT(cuenta ) AS total_abiertos,
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             2 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220228 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220201 AND 20220228) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes
               
               """


# In[ ]:


df_febrero = wr.redshift.read_sql_query(sql_a_febrero,con)
df_febrero


# In[ ]:


df_febrero=df_febrero[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_febrero=df_febrero.transpose( )
df_febrero=df_febrero.rename(columns={0: 'totales'})
plot =df_febrero.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_marzo =f"""
               SELECT 3 AS mes,
       COUNT(cuenta ) AS total_abiertos,
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             3 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220331 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220301 AND 20220331) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes
               """


# In[ ]:


df_marzo = wr.redshift.read_sql_query(sql_a_marzo,con)
df_marzo


# In[ ]:


df_marzo=df_marzo[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_marzo=df_marzo.transpose( )
df_marzo=df_marzo.rename(columns={0: 'totales'})
plot =df_marzo.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_abril =f"""
              SELECT mes,
       COUNT(cuenta ) AS total_abiertos,
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             4 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220430 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220401 AND 20220430) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes
               """


# In[ ]:


df_abril = wr.redshift.read_sql_query(sql_a_abril,con)
df_abril


# In[ ]:


df_abril=df_abril[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_abril=df_abril.transpose( )
df_abril=df_abril.rename(columns={0: 'totales'})
plot =df_abril.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_mayo =f"""
             SELECT mes AS total_abiertos,
       COUNT(cuenta ),
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             5 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220531 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220501 AND 20220531) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes
               """


# In[ ]:


df_mayo = wr.redshift.read_sql_query(sql_a_mayo,con)
df_mayo


# In[ ]:


df_mayo=df_mayo[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_mayo=df_mayo.transpose( )
df_mayo=df_mayo.rename(columns={0: 'totales'})
plot =df_mayo.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_junio =f"""
              SELECT mes AS total_abiertos,
       COUNT(cuenta ),
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             6 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220630 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220601 AND 20220630) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes
               """


# In[ ]:


df_junio = wr.redshift.read_sql_query(sql_a_junio,con)
df_junio


# In[ ]:


df_junio=df_junio[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_junio=df_junio.transpose( )
df_junio=df_junio.rename(columns={0: 'totales'})
plot =df_junio.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_julio =f"""
              SELECT mes AS total_abiertos,
       COUNT(cuenta ),
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             7 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220731 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220701 AND 20220731) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes
               """


# In[ ]:


df_julio = wr.redshift.read_sql_query(sql_a_julio,con)
df_julio


# In[ ]:


df_julio=df_julio[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_julio=df_julio.transpose( )
df_julio=df_julio.rename(columns={0: 'totales'})
plot =df_julio.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_agosto =f"""
               SELECT mes AS total_abiertos,
       COUNT(cuenta ),
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             8 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220831 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220801 AND 20220831) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes
               """


# In[ ]:


df_agosto = wr.redshift.read_sql_query(sql_a_agosto,con)
df_agosto


# In[ ]:


df_agosto=df_agosto[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_agosto=df_agosto.transpose( )
df_agosto=df_agosto.rename(columns={0: 'totales'})
plot =df_agosto.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_septiembre =f"""
                SELECT mes AS total_abiertos,
       COUNT(cuenta ),
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             9 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20220930 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20220901 AND 20220930) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes            

               """


# In[ ]:


df_septiembre = wr.redshift.read_sql_query(sql_a_septiembre,con)
df_septiembre


# In[ ]:


df_septiembre=df_septiembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_septiembre=df_septiembre.transpose( )
df_septiembre=df_septiembre.rename(columns={0: 'totales'})
plot =df_septiembre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_octubre =f"""
SELECT mes,
       COUNT(cuenta ) AS total_abiertos,
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             10 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20221031 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20221001 AND 20221031) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes            
               """


# In[ ]:


df_octubre = wr.redshift.read_sql_query(sql_a_octubre,con)
df_octubre


# In[ ]:


df_octubre=df_octubre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_octubre=df_octubre.transpose( )
df_octubre=df_octubre.rename(columns={0: 'totales'})
plot =df_octubre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_noviembre =f"""
                SELECT mes,
       COUNT(cuenta ) AS total_abiertos,
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             11 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20221130 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20221101 AND 20221130) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes            
               """


# In[ ]:


df_noviembre = wr.redshift.read_sql_query(sql_a_noviembre,con)
df_noviembre


# In[ ]:


df_noviembre=df_noviembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_noviembre=df_noviembre.transpose( )
df_noviembre=df_noviembre.rename(columns={0: 'totales'})
plot =df_noviembre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_a_diciembre =f"""
SELECT mes,
       COUNT(cuenta ) AS total_abiertos,
       SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
       SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
       SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
             cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
             edad_genero.birthday, edad_genero.genero, edad_genero.edad,
             nse.nse,
             abiertos.subscriberkey_abierto,
             CASE WHEN estatus_cta='Activo' THEN 1
                  ELSE 0
             END AS Activo,
             CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                  ELSE 0
             END AS Cancelada_Involuntaria,
             CASE WHEN estatus_cta='Cerrada' THEN 1
                  ELSE 0
             END AS Cerrada,
             CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                  ELSE 0
             END AS Deducción_Fiscal,
             CASE WHEN estatus_cta='Inactivo' THEN 1
                  ELSE 0
             END AS Inactivo,
             CASE WHEN estatus_cta='Nulo_Can' THEN 1
                  ELSE 0
             END AS Nulo_Can,
             CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                  ELSE 0
             END AS Nulo_Susp,
             12 AS mes
             FROM(SELECT DISTINCT cuenta, 
                         fecha_activacion, 
                         EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                         EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                         MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                         metodo_pago, 
                         morosidad, 
                         score, 
                         atraso, 
                         estatus_cta, 
                         ciclo, 
                         saldo_serv -- que es saldo servido? 
                  FROM black_box.cartera 
                  WHERE info_day = 20221231 ) as cartera_t


            LEFT JOIN ( select cuenta,--#falta genero 
                               birthday, 
                               genero, 
                               edad 
                        from bi.ds_edad_genero ) AS edad_genero 
            ON cartera_t.cuenta = edad_genero.cuenta 
            --#nse + cuenta 
            LEFT JOIN( select cuenta, 
                              nse 
                       from data_lake.nse 
                       where info_day in (select max(info_day) from data_lake.nse) 
                      )  as nse 
            ON cartera_t.cuenta = nse.cuenta

            JOIN(SELECT subscriberkey as subscriberkey_abierto
                 FROM client_contact.slf_email_send_opens
                 WHERE info_day BETWEEN 20221201 AND 20221231) as abiertos
            ON cartera_t.cuenta = abiertos.subscriberkey_abierto)
GROUP BY mes;
               """


# In[ ]:


df_diciembre = wr.redshift.read_sql_query(sql_a_diciembre,con)
df_diciembre


# In[ ]:


df_diciembre=df_diciembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_diciembre=df_diciembre.transpose( )
df_diciembre=df_diciembre.rename(columns={0: 'totales'})
plot =df_diciembre.plot.pie(y='totales', figsize=(7, 7))


# ## Resumen de los correos enviados

# In[ ]:


sql_e_enero =f"""    SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 1 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220131 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220101 AND 20220131) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes
     
               """


# In[ ]:


df_e_enero = wr.redshift.read_sql_query(sql_e_enero,con)
df_e_enero


# In[ ]:


df_e_enero=df_e_enero[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_enero=df_e_enero.transpose( )
df_e_enero=df_e_enero.rename(columns={0: 'totales'})
plot =df_e_enero.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_febrero =f"""         SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 2 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220228 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220201 AND 20220228) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes

               """


# In[ ]:


df_e_febrero = wr.redshift.read_sql_query(sql_e_enero,con)
df_e_febrero


# In[ ]:


df_e_febrero=df_e_febrero[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_febrero=df_e_febrero.transpose( )
df_e_febrero=df_e_febrero.rename(columns={0: 'totales'})
plot =df_e_febrero.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_marzo =f""" 
             SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 3 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220331 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220301 AND 20220331) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes

               """


# In[ ]:


df_e_marzo = wr.redshift.read_sql_query(sql_e_marzo,con)
df_e_marzo


# In[ ]:


df_e_marzo=df_e_marzo[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_marzo=df_e_marzo.transpose( )
df_e_marzo=df_e_marzo.rename(columns={0: 'totales'})
plot =df_e_marzo.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_abril =f"""    
              SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 4 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220430 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220401 AND 20220430) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes

               """


# In[ ]:


df_e_abril = wr.redshift.read_sql_query(sql_e_abril,con)
df_e_abril


# In[ ]:


df_e_abril=df_e_abril[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_abril=df_e_abril.transpose( )
df_e_abril=df_e_abril.rename(columns={0: 'totales'})
plot =df_e_abril.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_mayo =f"""        
                SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 5 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220531 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220501 AND 20220531) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes

               """


# In[ ]:


df_e_mayo = wr.redshift.read_sql_query(sql_e_mayo,con)
df_e_mayo


# In[ ]:


df_e_mayo=df_e_mayo[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_mayo=df_e_mayo.transpose( )
df_e_mayo=df_e_mayo.rename(columns={0: 'totales'})
plot =df_e_mayo.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_junio =f"""     SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 6 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220630 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220601 AND 20220630) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes
    
               """


# In[ ]:


df_e_junio = wr.redshift.read_sql_query(sql_e_junio,con)
df_e_junio


# In[ ]:


df_e_junio=df_e_junio[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_junio=df_e_junio.transpose( )
df_e_junio=df_e_junio.rename(columns={0: 'totales'})
plot =df_e_junio.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_julio =f"""  
              SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 7 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220731 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220701 AND 20220731) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes

               """


# In[ ]:


df_e_julio = wr.redshift.read_sql_query(sql_e_julio,con)
df_e_julio


# In[ ]:


df_e_julio=df_e_julio[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_julio=df_e_julio.transpose( )
df_e_julio=df_e_julio.rename(columns={0: 'totales'})
plot =df_e_julio.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_agosto =f"""  
               SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 8 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220831 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220801 AND 20220831) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes

               """


# In[ ]:


df_e_agosto = wr.redshift.read_sql_query(sql_e_agosto,con)
df_e_agosto


# In[ ]:


df_e_agosto=df_e_agosto[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_agosto=df_e_agosto.transpose( )
df_e_agosto=df_e_agosto.rename(columns={0: 'totales'})
plot =df_e_agosto.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_septiembre =f"""     
                   SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 9 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220930 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20220901 AND 20220930) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes

               """


# In[ ]:


df_e_septiembre = wr.redshift.read_sql_query(sql_e_septiembre,con)
df_e_septiembre


# In[ ]:


df_e_septiembre=df_e_septiembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_septiembre=df_e_septiembre.transpose( )
df_e_septiembre=df_e_septiembre.rename(columns={0: 'totales'})
plot =df_e_septiembre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_octubre =f"""  
                SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 10 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20221031 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20221001 AND 20221031) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_e_octubre = wr.redshift.read_sql_query(sql_e_octubre,con)
df_e_octubre


# In[ ]:


df_e_octubre=df_e_octubre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_octubre=df_e_octubre.transpose( )
df_e_octubre=df_e_octubre.rename(columns={0: 'totales'})
plot =df_e_octubre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_noviembre =f"""      
                  SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 11 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20221130 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20221101 AND 20221130) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_e_noviembre = wr.redshift.read_sql_query(sql_e_noviembre,con)
df_e_noviembre


# In[ ]:


df_e_noviembre=df_e_noviembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_noviembre=df_e_noviembre.transpose( )
df_e_noviembre=df_e_noviembre.rename(columns={0: 'totales'})
plot =df_e_noviembre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_e_diciembre =f"""      
                  SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 12 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20221231 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20221201 AND 20221231) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_e_diciembre = wr.redshift.read_sql_query(sql_e_diciembre,con)
df_e_diciembre


# In[ ]:


df_e_diciembre=df_e_diciembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_diciembre=df_e_diciembre.transpose( )
df_e_diciembre=df_e_diciembre.rename(columns={0: 'totales'})
plot =df_e_diciembre.plot.pie(y='totales', figsize=(7, 7))


# ## Reporte correos a los que les dieron click

# In[ ]:


sql_c_enero =f"""    
               SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 1 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220131 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220101 AND 20220131) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_enero = wr.redshift.read_sql_query(sql_c_enero,con)
df_c_enero


# In[ ]:


df_c_enero=df_c_enero[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_enero=df_c_enero.transpose( )
df_c_enero=df_c_enero.rename(columns={0: 'totales'})
plot =df_c_enero.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_febrero =f"""     SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 2 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220228 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220201 AND 20220228) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
     
               """


# In[ ]:


df_c_febrero = wr.redshift.read_sql_query(sql_c_febrero,con)
df_c_febrero


# In[ ]:


df_c_febrero=df_c_febrero[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_febrero=df_c_febrero.transpose( )
df_c_febrero=df_c_febrero.rename(columns={0: 'totales'})
plot =df_c_febrero.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_marzo =f"""    
                  SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 3 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220331 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220301 AND 20220331) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_marzo = wr.redshift.read_sql_query(sql_c_marzo,con)
df_c_marzo


# In[ ]:


df_c_marzo=df_c_marzo[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_marzo=df_c_marzo.transpose( )
df_c_marzo=df_c_marzo.rename(columns={0: 'totales'})
plot =df_c_marzo.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_abril =f""" 
               SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 4 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220430 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220401 AND 20220430) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
     
               """


# In[ ]:


df_c_abril = wr.redshift.read_sql_query(sql_c_abril,con)
df_c_abril


# In[ ]:


df_c_abril=df_c_abril[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_abril=df_c_abril.transpose( )
df_c_abril=df_c_abril.rename(columns={0: 'totales'})
plot =df_c_abril.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_mayo =f"""     
                 SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 5 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220531 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220501 AND 20220531) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
     
               """


# In[ ]:


df_c_mayo = wr.redshift.read_sql_query(sql_c_mayo,con)
df_c_mayo


# In[ ]:


df_c_mayo=df_c_mayo[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_mayo=df_c_mayo.transpose( )
df_c_mayo=df_c_mayo.rename(columns={0: 'totales'})
plot =df_c_mayo.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_junio =f"""    
                   SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 6 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220630 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220601 AND 20220630) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_junio = wr.redshift.read_sql_query(sql_c_junio,con)
df_c_junio


# In[ ]:


df_c_junio=df_c_junio[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_junio=df_c_junio.transpose( )
df_c_junio=df_c_junio.rename(columns={0: 'totales'})
plot =df_c_junio.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_julio =f"""    
                  SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 7 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220731 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220701 AND 20220731) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_julio = wr.redshift.read_sql_query(sql_c_julio,con)
df_c_julio


# In[ ]:


df_c_julio=df_c_julio[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_julio=df_c_julio.transpose( )
df_c_julio=df_c_julio.rename(columns={0: 'totales'})
plot =df_c_julio.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_agosto =f"""    
                   SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 8 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220831 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220801 AND 20220831) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_agosto = wr.redshift.read_sql_query(sql_c_agosto,con)
df_c_agosto


# In[ ]:


df_c_agosto=df_c_agosto[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_agosto=df_c_agosto.transpose( )
df_c_agosto=df_c_agosto.rename(columns={0: 'totales'})
plot =df_c_agosto.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_septiembre =f"""    
                    SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 9 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20220930 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20220901 AND 20220930) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_septiembre = wr.redshift.read_sql_query(sql_c_septiembre,con)
df_c_septiembre


# In[ ]:


df_c_septiembre=df_c_septiembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_septiembre=df_c_septiembre.transpose( )
df_c_septiembre=df_c_septiembre.rename(columns={0: 'totales'})
plot =df_c_septiembre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_octubre =f"""    
                    SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 10 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20221031 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20221001 AND 20221031) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_octubre = wr.redshift.read_sql_query(sql_c_octubre,con)
df_c_octubre


# In[ ]:


df_c_octubre=df_c_octubre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_octubre=df_c_octubre.transpose( )
df_c_octubre=df_c_octubre.rename(columns={0: 'totales'})
plot =df_c_octubre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_noviembre =f"""    
                   SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 11 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20221130 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20221101 AND 20221130) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_noviembre = wr.redshift.read_sql_query(sql_c_noviembre,con)
df_c_noviembre


# In[ ]:


df_c_noviembre=df_c_noviembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_noviembre=df_c_noviembre.transpose( )
df_c_noviembre=df_c_noviembre.rename(columns={0: 'totales'})
plot =df_c_noviembre.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:


sql_c_diciembre =f"""    
                      SELECT mes,
                           COUNT(cuenta ) AS total_click,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 clicks.subscriberkey_click,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 12 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20221231 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_click
                                     FROM client_contact.slf_email_send_clicks
                                     WHERE info_day BETWEEN 20221201 AND 20221231) as clicks
                                ON cartera_t.cuenta = clicks.subscriberkey_click
                                   )
                    GROUP BY mes
               """


# In[ ]:


df_c_diciembre = wr.redshift.read_sql_query(sql_c_enero,con)
df_c_diciembre


# In[ ]:


df_c_diciembre=df_c_diciembre[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_c_diciembre=df_c_diciembre.transpose( )
df_c_diciembre=df_c_diciembre.rename(columns={0: 'totales'})
plot =df_c_diciembre.plot.pie(y='totales', figsize=(7, 7))


# # Enviados Enero 2023

# In[ ]:


sql_e_enero =f"""    SELECT mes,
                           COUNT(cuenta ) AS total_enviados,
                           SUM(Activo) AS Activo_A, SUM(Cancelada_Involuntaria) AS Cancelada_Involuntaria_A,
                           SUM(Cerrada) AS Cerrada_A, SUM(Deducción_Fiscal) AS Deducción_Fiscal_A, SUM(Inactivo) AS Inactivo_A, 
                           SUM(Nulo_Can) AS Nulo_Can_A, SUM(Nulo_Susp) AS Nulo_Susp_A
                    FROM (SELECT cartera_t.cuenta, cartera_t.fecha_activacion, cartera_t.mes_act, cartera_t.ano_act, cartera_t.vida_cuenta, cartera_t.metodo_pago,
                                 cartera_t.morosidad, cartera_t.score, cartera_t.atraso, cartera_t.estatus_cta, cartera_t.ciclo, cartera_t.saldo_serv,
                                 edad_genero.birthday, edad_genero.genero, edad_genero.edad,
                                 nse.nse,
                                 enviados.subscriberkey_enviado,
                                 CASE WHEN estatus_cta='Activo' THEN 1
                                      ELSE 0
                                 END AS Activo,
                                 CASE WHEN estatus_cta='Cancelada Involuntaria' THEN 1
                                      ELSE 0
                                 END AS Cancelada_Involuntaria,
                                 CASE WHEN estatus_cta='Cerrada' THEN 1
                                      ELSE 0
                                 END AS Cerrada,
                                 CASE WHEN estatus_cta='Deducción Fiscal' THEN 1
                                      ELSE 0
                                 END AS Deducción_Fiscal,
                                 CASE WHEN estatus_cta='Inactivo' THEN 1
                                      ELSE 0
                                 END AS Inactivo,
                                 CASE WHEN estatus_cta='Nulo_Can' THEN 1
                                      ELSE 0
                                 END AS Nulo_Can,
                                 CASE WHEN estatus_cta='Nulo_Susp' THEN 1
                                      ELSE 0
                                 END AS Nulo_Susp,
                                 1 AS mes 
                                 FROM(SELECT DISTINCT cuenta, 
                                             fecha_activacion, 
                                             EXTRACT(MONTH FROM CAST(fecha_activacion AS DATE)) AS mes_act, 
                                             EXTRACT(YEAR FROM CAST(fecha_activacion AS DATE)) AS ano_act, 
                                             MONTHS_BETWEEN(CURRENT_DATE, TO_DATE(fecha_activacion, 'YYYY-MM-DD')) as vida_cuenta, 
                                             metodo_pago, 
                                             morosidad, 
                                             score, 
                                             atraso, 
                                             estatus_cta, 
                                             ciclo, 
                                             saldo_serv -- que es saldo servido? 
                                      FROM black_box.cartera 
                                      WHERE info_day = 20230131 ) as cartera_t


                                LEFT JOIN ( select cuenta,--#falta genero 
                                                   birthday, 
                                                   genero, 
                                                   edad 
                                            from bi.ds_edad_genero ) AS edad_genero 
                                ON cartera_t.cuenta = edad_genero.cuenta 
                                --#nse + cuenta 
                                LEFT JOIN( select cuenta, 
                                                  nse 
                                           from data_lake.nse 
                                           where info_day in (select max(info_day) from data_lake.nse) 
                                          )  as nse 
                                ON cartera_t.cuenta = nse.cuenta

                                JOIN(SELECT subscriberkey as subscriberkey_enviado
                                     FROM  client_contact.slf_email_send_sent
                                     WHERE info_day BETWEEN 20230101 AND 20230131) as enviados
                                ON cartera_t.cuenta = enviados.subscriberkey_enviado
                                   )
                    GROUP BY mes
     
               """


# In[ ]:


df_e_enero = wr.redshift.read_sql_query(sql_e_enero,con)
df_e_enero


# In[ ]:


df_e_enero=df_e_enero[['activo_a','cancelada_involuntaria_a','cerrada_a','deducción_fiscal_a','inactivo_a','nulo_can_a','nulo_susp_a']]
df_e_enero=df_e_enero.transpose( )
df_e_enero=df_e_enero.rename(columns={0: 'totales'})
plot =df_e_enero.plot.pie(y='totales', figsize=(7, 7))


# In[ ]:
